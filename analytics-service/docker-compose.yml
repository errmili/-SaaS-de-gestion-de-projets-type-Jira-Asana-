version: '3.8'

services:
  # PostgreSQL pour Analytics
  analytics-postgres:
    image: postgres:15-alpine
    container_name: analytics-postgres
    ports:
      - "5435:5432"
    environment:
      POSTGRES_DB: analytics_db
      POSTGRES_USER: analytics_user
      POSTGRES_PASSWORD: analytics_pass
    volumes:
      - analytics_postgres_data:/var/lib/postgresql/data
    networks:
      - analytics-network

  # Redis pour cache (optionnel)
  analytics-redis:
    image: redis:7-alpine
    container_name: analytics-redis
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    volumes:
      - analytics_redis_data:/data
    networks:
      - analytics-network

  # Zookeeper pour Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: analytics-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - analytics-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: analytics-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - analytics-network

  # Kafka UI (pour visualiser les topics)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: analytics-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - analytics-network

volumes:
  analytics_postgres_data:
  analytics_redis_data:

networks:
  analytics-network:
    driver: bridge