server:
  port: 8085

spring:
  application:
    name: analytics-service

  # Configuration base de données (même pattern que notification-service)
  datasource:
    url: jdbc:postgresql://localhost:5432/saas_project_db_dev?currentSchema=analytics_db
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:root}
    driver-class-name: org.postgresql.Driver

    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000

  # Configuration JPA (même pattern que notification-service)
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        default_schema: analytics_db
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  # Configuration Flyway (analytics_db schema)
  flyway:
    enabled: true
    locations: classpath:db/migration
    user: postgres
    password: root
    schemas: analytics_db
    default-schema: analytics_db
    clean-disabled: false

  # Configuration Kafka (même que notification)
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: analytics-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# Configuration Eureka (gardée de ton analytics original)
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

# Configuration analytics
analytics:
  reports:
    output-dir: ${REPORTS_DIR:./reports}
    auto-generation: true
  retention:
    raw-data-days: 90
    aggregated-data-days: 365
  performance:
    batch-size: 1000
    cache-ttl: 300

# Configuration logging (même pattern que notification)
logging:
  level:
    com.projectsaas.analytics: DEBUG
    org.springframework.kafka: INFO
    org.flywaydb: DEBUG
    org.hibernate.SQL: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Configuration monitoring (même pattern que notification)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always


#
#server:
#  port: 8085
#
#spring:
#  application:
#    name: analytics-service
#
#  # Configuration base de données (même pattern que notification-service)
#  datasource:
#    url: jdbc:postgresql://localhost:5432/saas_project_db_dev?currentSchema=analytics_db
#    username: ${DB_USERNAME:postgres}
#    password: ${DB_PASSWORD:root}
#    driver-class-name: org.postgresql.Driver
#
#    hikari:
#      maximum-pool-size: 20
#      minimum-idle: 5
#      idle-timeout: 300000
#      connection-timeout: 20000
#
#  # Configuration JPA (même pattern que notification-service)
#  jpa:
#    hibernate:
#      ddl-auto: update
#    show-sql: false
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#        format_sql: true
#        default_schema: analytics_db
#        jdbc:
#          batch_size: 20
#        order_inserts: true
#        order_updates: true
#
#  # Configuration Flyway (analytics_db schema)
#  flyway:
#    enabled: true
#    locations: classpath:db/migration
#    user: postgres
#    password: root
#    schemas: analytics_db
#    default-schema: analytics_db
#    clean-disabled: false
#
#  # ❌ Configuration Kafka (DÉSACTIVÉE)
#  kafka:
#    enabled: false
#    # bootstrap-servers: localhost:9092
#    # consumer:
#    #   group-id: analytics-service
#    #   auto-offset-reset: earliest
#    #   key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#    #   value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#    #   properties:
#    #     spring.json.trusted.packages: "*"
#    # producer:
#    #   key-serializer: org.apache.kafka.common.serialization.StringSerializer
#    #   value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#
## ❌ Configuration Eureka (DÉSACTIVÉE)
#eureka:
#  client:
#    enabled: false
#    # service-url:
#    #   defaultZone: http://localhost:8761/eureka/
#
## Configuration analytics
#analytics:
#  reports:
#    output-dir: ${REPORTS_DIR:./reports}
#    auto-generation: true
#  retention:
#    raw-data-days: 90
#    aggregated-data-days: 365
#  performance:
#    batch-size: 1000
#    cache-ttl: 300
#
## Configuration logging (même pattern que notification)
#logging:
#  level:
#    com.projectsaas.analytics: DEBUG
#    org.springframework.kafka: INFO
#    org.flywaydb: DEBUG
#    org.hibernate.SQL: DEBUG
#  pattern:
#    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
#
## Configuration monitoring (même pattern que notification)
#management:
#  endpoints:
#    web:
#      exposure:
#        include: health,info,metrics
#  endpoint:
#    health:
#      show-details: always